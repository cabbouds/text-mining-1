created on 12/15/15 (working at ace hotel; lunch w lurmie later; spotify interview later; going through all java ML exercises at technobium; had an argument wiht bay this morning - she feels that im drifting away)

goal: explore java & mahout for naivebayes (i have already explored mahout's logistic regression model). will build it using maven, which eliminates the need to link code to JARs. any maven build requires (1) source POM files (which is provided by the framework's source code); (2) project POM files (which is generated by maven during the "generate" process and specifies dependencies & repos); (3) source code (where the actual code resides).

reference: http://technobium.com/sentiment-analysis-using-mahout-naive-bayes/

1) install apache mahout at http://apache.mirrors.ionfish.org/mahout/

2) navigate to /apache-mahout-distribution/ and find the POM file. from this folder, instantiate the project by doing $ mvn archetype:generate \
    -DarchetypeGroupId=org.apache.maven.archetypes \
    -DgroupId=com.technobium \
    -DartifactId=logisticRegression

the tutorial uses "create" keyword, which is deprecated. use "generate" instead.

3) rename app class, per tutorial instruction

4) navigate to project folder and update project's POM file, per tutorial instruction. this code block "links" the project source code with the framework's code.

5) update configuration code block in the project's POM file, per tutorial's instruction.

6) download training data, per tutorial's instruction.

7) update project source code, per project's instruction.

8) compile, per tutorials instruction